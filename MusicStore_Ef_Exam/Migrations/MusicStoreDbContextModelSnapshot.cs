// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore_Ef_Exam.Data;

#nullable disable

namespace MusicStore_Ef_Exam.Migrations
{
    [DbContext(typeof(MusicStoreDbContext))]
    partial class MusicStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Name = "No Troubles",
                            Price = 2m,
                            Quantity = 5,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CategoryId = 2,
                            Name = "My Way",
                            Price = 5m,
                            Quantity = 20,
                            Year = 2020
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CategoryId = 3,
                            Name = "No More Tears",
                            Price = 10m,
                            Quantity = 100,
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CategoryId = 4,
                            Name = "M.A.D.E.",
                            Price = 25m,
                            Quantity = 15,
                            Year = 2017
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Watsebha"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Calvin",
                            Surname = "Harris"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 5,
                            Name = "Ozzy",
                            Surname = "Osbourne"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 5,
                            Name = "Lucky",
                            Surname = "Luke"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sviatoslav"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Leonardo"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Relax"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Work Out"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 5,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Ganre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ganres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Metalic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hip-Hop"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Summ")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerId = 1,
                            SellerId = 1,
                            Summ = 200m
                        },
                        new
                        {
                            Id = 2,
                            BuyerId = 2,
                            SellerId = 2,
                            Summ = 20m
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.OrderAlbums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderAlbums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 2,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            OrderId = 2
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Oleksandr",
                            Surname = "Polushovuch"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            Name = "Dima",
                            Surname = "Piatov"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumsId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("GanreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumsId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumsId = 1,
                            Duration = 240,
                            GanreId = 5,
                            Name = "No Troubles"
                        },
                        new
                        {
                            Id = 2,
                            AlbumsId = 2,
                            Duration = 210,
                            GanreId = 1,
                            Name = "My Way"
                        },
                        new
                        {
                            Id = 3,
                            AlbumsId = 3,
                            Duration = 400,
                            GanreId = 3,
                            Name = "No More Tears"
                        },
                        new
                        {
                            Id = 4,
                            AlbumsId = 2,
                            Duration = 200,
                            GanreId = 1,
                            Name = "M.A.D.E"
                        });
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Album", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Author", "Author")
                        .WithMany("Albums")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicStore_Ef_Exam.Entities.Category", "Category")
                        .WithMany("Albums")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Author", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Country", "Country")
                        .WithMany("Author")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Order", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Buyer", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicStore_Ef_Exam.Entities.Seller", "Seller")
                        .WithMany("Orders")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.OrderAlbums", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Album", "Album")
                        .WithMany("OrderAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MusicStore_Ef_Exam.Entities.Order", "Order")
                        .WithMany("OrderAlbums")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Seller", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Country", "Country")
                        .WithMany("Seller")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Track", b =>
                {
                    b.HasOne("MusicStore_Ef_Exam.Entities.Album", "Albums")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicStore_Ef_Exam.Entities.Ganre", "Ganre")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albums");

                    b.Navigation("Ganre");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Album", b =>
                {
                    b.Navigation("OrderAlbums");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Author", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Buyer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Category", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Country", b =>
                {
                    b.Navigation("Author");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Ganre", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Order", b =>
                {
                    b.Navigation("OrderAlbums");
                });

            modelBuilder.Entity("MusicStore_Ef_Exam.Entities.Seller", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
